{"ast":null,"code":"var _jsxFileName = \"/home/m4lw/Documents/DECEIPT_EMAIL/frontend/src/pages/Challenge.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailList from '../components/EmailList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Challenge() {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetch('http://localhost:5000/api/emails').then(res => res.json()).then(data => setEmails(data)).catch(err => console.error('Error fetching emails:', err));\n  }, []);\n  const handleAnswer = (emailId, userAnswer) => {\n    fetch('http://localhost:5000/api/check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        emailId,\n        userAnswer\n      })\n    }).then(res => res.json()).then(data => {\n      const newResponses = [...responses, {\n        emailId,\n        ...data\n      }];\n      setResponses(newResponses);\n      if (newResponses.length === emails.length) {\n        history.push('/results', {\n          responses: newResponses\n        });\n      }\n    }).catch(err => console.error('Error checking answer:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bandeja de entrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailList, {\n      emails: emails,\n      onAnswer: handleAnswer,\n      responses: responses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Challenge, \"krRSQo9SPCDLlvFtMYEDqQC5BEM=\", false, function () {\n  return [useHistory];\n});\n_c = Challenge;\nexport default Challenge;\nvar _c;\n$RefreshReg$(_c, \"Challenge\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","EmailList","jsxDEV","_jsxDEV","Challenge","_s","emails","setEmails","responses","setResponses","history","fetch","then","res","json","data","catch","err","console","error","handleAnswer","emailId","userAnswer","method","headers","body","JSON","stringify","newResponses","length","push","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnswer","_c","$RefreshReg$"],"sources":["/home/m4lw/Documents/DECEIPT_EMAIL/frontend/src/pages/Challenge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailList from '../components/EmailList';\n\nfunction Challenge() {\n  const [emails, setEmails] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/emails')\n      .then(res => res.json())\n      .then(data => setEmails(data))\n      .catch(err => console.error('Error fetching emails:', err));\n  }, []);\n\n  const handleAnswer = (emailId, userAnswer) => {\n    fetch('http://localhost:5000/api/check', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ emailId, userAnswer })\n    })\n      .then(res => res.json())\n      .then(data => {\n        const newResponses = [...responses, { emailId, ...data }];\n        setResponses(newResponses);\n        if (newResponses.length === emails.length) {\n          history.push('/results', { responses: newResponses });\n        }\n      })\n      .catch(err => console.error('Error checking answer:', err));\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Bandeja de entrada</h1>\n      <EmailList emails={emails} onAnswer={handleAnswer} responses={responses} />\n    </div>\n  );\n}\n\nexport default Challenge;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMY,OAAO,GAAGV,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIR,SAAS,CAACQ,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGA,CAACC,OAAO,EAAEC,UAAU,KAAK;IAC5CX,KAAK,CAAC,iCAAiC,EAAE;MACvCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,OAAO;QAAEC;MAAW,CAAC;IAC9C,CAAC,CAAC,CACCV,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMa,YAAY,GAAG,CAAC,GAAGpB,SAAS,EAAE;QAAEa,OAAO;QAAE,GAAGN;MAAK,CAAC,CAAC;MACzDN,YAAY,CAACmB,YAAY,CAAC;MAC1B,IAAIA,YAAY,CAACC,MAAM,KAAKvB,MAAM,CAACuB,MAAM,EAAE;QACzCnB,OAAO,CAACoB,IAAI,CAAC,UAAU,EAAE;UAAEtB,SAAS,EAAEoB;QAAa,CAAC,CAAC;MACvD;IACF,CAAC,CAAC,CACDZ,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEd,OAAA;IAAK4B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B9B,OAAA;MAAA8B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlC,OAAA,CAACF,SAAS;MAACK,MAAM,EAAEA,MAAO;MAACgC,QAAQ,EAAElB,YAAa;MAACZ,SAAS,EAAEA;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAAChC,EAAA,CAnCQD,SAAS;EAAA,QAGAJ,UAAU;AAAA;AAAAuC,EAAA,GAHnBnC,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}